<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>epk.sam.ebooks</groupId>
  <artifactId>corejava9</artifactId>
  <version>0.0.1-SNAPSHOT</version>
   
  <description>book code ported to maven</description>
  	<!-- обязан добавить это свойство, чтоб не было предупреждений! -->
	<properties>
		<!-- Если в исходниках содержится кириллица, задаем -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4jVersion>1.7.2</slf4jVersion>
		<jdk.version>1.8</jdk.version>
	</properties>
  <build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- указывать версию обязательно, иначе warning [WARNING] 'build.plugins.plugin.version' 
					for org.apache.maven.plugins:maven-compiler-plugin is missing It is highly 
					recommended to fix these problems because they threaten the stability of 
					your build. [WARNING] For this reason, future Maven versions might no longer 
					support building such malformed projects. How to know what’s the Maven’s 
					plugin version? You can try the plugin at http://search.maven.org/ , or visit 
					the plugin website, for example – Maven compiler plugin official website. 
					http://maven.apache.org/plugins/maven-compiler-plugin/index.html -->
				<version>3.1</version>

				<configuration>
					<fork>true</fork>
					<source>1.8</source>
					<target>1.8</target>
					<!-- кодировка для обработки исходных файлов -->
					<encoding>UTF-8</encoding>
					<!-- Иначе при сборке на hudson падает компиляция с сообщением [ERROR] 
						No compiler is provided in this environment. Perhaps you are running on a 
						JRE rather than a JDK? ,а системное свойство java.home всегда указывает на 
						JRE, а не на JDK. Maven ищет для компиляции tools.jar, который есть только 
						в jdk_home/lib -->
					<executable>${env.JAVA_HOME}/bin/javac</executable>
					<compilerArguments>
						<verbose />
						<!-- path.separator можно глянуть в hudson/systemInfo -->
						<bootclasspath>${java.home}/lib/rt.jar${path.separator}${env.JAVA_HOME}/lib/tools.jar</bootclasspath>
						<!-- 
						<bootclasspath>${env.JAVA_HOME}/lib/tools.jar</bootclasspath>
						 --> 
					</compilerArguments>
				</configuration>
			</plugin>
			<!-- and you run it with mvn clean compile assembly:single Compile goal 
				should be added before assembly:single or otherwise the code on your own 
				project is not included. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>sam.epk.books.ch01.sec01.OldStyle</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>

			<!-- make jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>samzap.examples.calculator.Calculator</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4jVersion}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Binding for System.out -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4jVersion}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<!-- http://maven.apache.org/plugins/maven-surefire-plugin/examples/junit.html -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- <version>4.8.2</version> -->
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- для FileVisitor04.java -->
		<!-- http://www.jarvana.com/jarvana/view/com/itextpdf/itextpdf/5.1.3/itextpdf-5.1.3.jar!/com/itextpdf/text/pdf/PdfReader$PageRefs.class?classDetails=ok -->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>1.7.1</version>

		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

	</dependencies>
  
  
  
  
  
</project>